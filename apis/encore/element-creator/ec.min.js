/* -----------------------------------------------
/* Author : NATSKI - natski.net
/* MIT license : https://opensource.org/license/MIT
/* GitHub : https://github.com/natspooky/encore
/* How to use? : Check the GitHub README or visit https://natski.net/api/encore/element-creator
/* ----------------------------------------------- */

export function jsonElementify(e){if(Array.isArray(e))return jsonMultiElementify(e);let n=e.namespace?document.createElementNS(e.namespace,e.tag):document.createElement(e.tag);if(!n)throw Error("an invalid TAG has been applied");return e.innerHTML&&(n.innerHTML=e.innerHTML),e.classes&&(Array.isArray(e.classes)?e.classes.forEach(t=>{t.includes(" ")?e.classes.split(" ").forEach(e=>{n.classList.add(e)}):n.classList.add(t)}):e.classes.split(" ").forEach(e=>{n.classList.add(e)})),e.attributes&&Object.entries(e.attributes).forEach(([e,t])=>{checkExists(t)&&n.setAttribute(e,t)}),e.children&&appendChildren(n,jsonElementify(e.children)),e.events&&Object.entries(e.events).forEach(([e,t])=>{t&&(Array.isArray(t)?t.forEach(t=>{n.addEventListener(e,functionType(t,n),t.options)}):n.addEventListener(e,functionType(t,n),t.options))}),e.load&&onceAppendedSync(n,e.load),n}function jsonMultiElementify(e){let n=[];return e.forEach(e=>{checkForKeys(e)&&n.push(jsonElementify(e))}),n}function useDeprecatedMethod(e,n){let t;return e.addEventListener("DOMNodeInserted",t=o=>{o.path.length>1&&o.path[o.length-2]instanceof Document&&(e.removeEventListener("DOMNodeInserted",t),n(e))},!1)}function isAppended(e){for(;e.parentNode;)e=e.parentNode;return e instanceof Document}function onceAppendedSync(e,n){if(isAppended(e)){n(e);return}if(!MutationObserver)return useDeprecatedMethod(e,n);let t=new MutationObserver(o=>{0!==o[0].addedNodes.length&&0!==Array.from(o[0].addedNodes).filter(n=>n.contains(e)).length&&(t.disconnect(),n(e))});t.observe(document.body,{childList:!0,subtree:!0})}function checkForKeys(e){return 0!==Object.keys(e).length&&e.constructor===Object}function functionType(e,n){return checkExists(e.var)?Array.isArray(e.var)&&e.var.length>1?"self"===e.var[0]?()=>e.func(n,...e.var.slice(1)):"event"===e.var[0]?n=>e.func(n,...e.var.slice(1)):()=>e.func(...e.var):(Array.isArray(e.var)&&(e.var=e.var[0]),"self"===e.var)?()=>e.func(n):"event"===e.var?n=>e.func(n):()=>e.func(e.var):()=>e.func()}export function checkExists(e){return null!=e}export function setFallback(e,n){return checkExists(e)?e:n}export function appendChildren(e,n){if(Array.isArray(n))for(let t of n)e.appendChild(t);else e.appendChild(n)}export function insertChildrenBefore(e,n,t){if(Array.isArray(n))for(let o of n)e.insertBefore(o,t);else e.insertBefore(n,t)}export function className(e,...n){return[...n][0]&&(Array.isArray(e)||(e=e.split(" ")),[...n].forEach(n=>{Array.isArray(n)||(n=n.split(" ")),e.push(...n)})),e}export class ComponentManager{#a={};#b;constructor(e){this.#b=e}get name(){return this.#b}setComponent(e,n){if(this.getComponent(e))throw Error('Component ID is already in use. Use "replaceComponent" for reassigning components');if(n&&n.nodeType===Node.ELEMENT_NODE){this.#a[e]=n;return}this.#a[e]=jsonElementify(jsonString)}getComponent(e){return this.#a?.[e]}getComponents(...e){return[...e].map(e=>this.getComponent(e))}getAllComponents(){return Object.entries(this.#a).map(([e,n])=>n)}removeComponent(e){let n=this.getComponent(e);n&&(document.body.contains(n)&&n.remove(),delete this.#a[e])}removeComponents(...e){[...e].forEach(e=>this.removeComponent(e))}removeAllComponents(){Object.entries(this.#a).forEach(([e,n])=>this.removeComponent(e))}changeComponentID(e,n){let t=this.getComponent(e),o=this.getComponent(n);if(!t)throw Error("Component ID doesn't match any existing components");if(o)throw Error("New component ID is already assigned to a component");this.setComponent(n,t),delete this.#a[e]}replaceComponent(e,n){let t=this.getComponent(e),o=jsonElementify(n);if(!t){this.setComponent(e,n);return}this.#a[e]=o,document.body.contains(t)&&(insertChildrenBefore(t.parentNode,o,t),t.remove())}appendComponent(e,n){appendChildren(e,this.getComponent(n))}insertComponent(e,n,t){insertChildrenBefore(e,this.getComponent(n),t)}get componentCount(){return this.#a.length}}