/* -----------------------------------------------
/* Author : NATSKI - natski.net
/* MIT license : https://opensource.org/license/MIT
/* GitHub : https://github.com/natspooky/encore
/* How to use? : Check the GitHub README or visit https://natski.net/api/encore/element-creator
/* ----------------------------------------------- */

export function jsonElementify(e){if(Array.isArray(e))return jsonMultiElementify(e);let r=document.createElement(e.tag);if(!r)throw Error("an invalid TAG has been applied");return e.innerHTML&&(r.innerHTML=e.innerHTML),e.classes&&(Array.isArray(e.classes)?e.classes.forEach(t=>{t.includes(" ")?e.classes.split(" ").forEach(e=>{r.classList.add(e)}):r.classList.add(t)}):e.classes.split(" ").forEach(e=>{r.classList.add(e)})),e.events&&Object.entries(e.events).forEach(([e,t])=>{t&&(Array.isArray(t)?t.forEach(t=>{r.addEventListener(e,functionType(t,r),t.options)}):r.addEventListener(e,functionType(t,r),t.options))}),e.attributes&&Object.entries(e.attributes).forEach(([e,t])=>{checkExists(t)&&r.setAttribute(e,t)}),e.dataset&&Object.entries(e.dataset).forEach(([e,t])=>{checkExists(t)&&(r.dataset[e.split("-").map((e,r)=>r?e.slice(0,1).toUpperCase()+e.slice(1):e).join("")]=t)}),e.children&&appendChildren(r,jsonElementify(e.children)),r}function jsonMultiElementify(e){let r=[];return e.forEach(e=>{checkForKeys(e)&&r.push(jsonElementify(e))}),r}function checkForKeys(e){return 0!==Object.keys(e).length&&e.constructor===Object}function functionType(e,r){return checkExists(e.var)?Array.isArray(e.var)&&e.var.length>1?"self"===e.var[0]?()=>e.func(r,...e.var.slice(1)):"event"===e.var[0]?r=>e.func(r,...e.var.slice(1)):()=>e.func(...e.var):(Array.isArray(e.var)&&(e.var=e.var[0]),"self"===e.var)?()=>e.func(r):"event"===e.var?r=>e.func(r):()=>e.func(e.var):()=>e.func()}export function checkExists(e){return null!=e}export function setFallback(e,r){return checkExists(e)?e:r}export function appendChildren(e,r){if(Array.isArray(r))for(let t of r)e.appendChild(t);else e.appendChild(r)}export function insertChildrenBefore(e,r,t){if(Array.isArray(r))for(let s of r)e.insertBefore(s,t);else e.insertBefore(r,t)}export function className(e,...r){return[...r][0]&&(Array.isArray(e)||(e=e.split(" ")),[...r].forEach(r=>{Array.isArray(r)||(r=r.split(" ")),e.push(...r)})),e}